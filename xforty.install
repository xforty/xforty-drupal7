<?php
/**
 * Install code for the xforty profile.
 *
 * This profile can be used as a standalone profile or as a
 * base profile for other sub-profiles.
 */

/**
 * Perform actions to set up the site for this profile.
 *
 * Implements hook_install().
 */
function xforty_install() {

  // Make sure this function is only run once
  static $xforty_install_ran;
  if ($xforty_install_ran !== null) {
    return;
  } else {
    $xforty_install_ran = true;
  }

  xforty_enable_theme_settings();
  xforty_setup_roles();
  xforty_set_variables();
}

/**
 * Set default and admin themes.
 */
function xforty_enable_theme_settings () {
  // Enable and set default theme (bartik).
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'bartik')
    ->execute();
  variable_set('theme_default', 'bartik');

  // Enable and set admin theme (seven).
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
  variable_set('theme_seven_settings', array(
    'toggle_logo' => 1,
    'toggle_name' => 1,
    'toggle_slogan' => 1,
    'toggle_node_user_picture' => 1,
    'toggle_comment_user_picture' => 1,
    'toggle_comment_user_verification' => 1,
    'toggle_favicon' => 1,
    'toggle_main_menu' => 1,
    'toggle_secondary_menu' => 1,
    'default_logo' => 0,
    'logo_path' => '',
    'logo_upload' => '',
    'default_favicon' => 1,
    'favicon_path' => '',
    'favicon_upload' => '',
  ));
}

/*
 * Create our base roles.
 */
function xforty_setup_roles() {
  // editor
  $editor_role = new stdClass();
  $editor_role->name = 'editor';
  $editor_role->weight = 10;
  user_role_save($editor_role);

  // admnistrator
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 20;
  user_role_save($admin_role);

  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
}

/**
 * Set miscellaneous variables.
 */
function xforty_set_variables() {
  // Only administrators can register new users.
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

  // pathauto variables since they don't get set early enough for content.
  variable_set('pathauto_node_pattern', '[node:title]');
  variable_set('pathauto_punctuation_underscore', '1');

  // Set up date defaults so it doesn't yell at us anymore
  variable_set('date_first_day', 0);
  variable_set('date_format_long', 'l, F j, Y - H:i');
  variable_set('date_format_medium', 'D, Y-m-d H:i');
  variable_set('date_format_short', 'Y-m-d H:i');

  // Keep admin_menu displayed at top of view window
  variable_set('admin_menu_position_fixed', 1);
}

/**
 * Provide a new function for the install_finished install task.
 *
 * Implements hook_install_tasks_alter()
 */
function xforty_install_tasks_alter(&$tasks, &$install_state) {
  $tasks['install_finished']['function'] = 'xforty_install_finished';
}

/**
 * Tasks to finish the install.
 */
function xforty_install_finished(&$install_state) {
  // Execute core's install_finished
  $output = install_finished($install_state);

  // Revert all feature modules
  if (module_exists('features')) {
    features_revert();
  }

  // Rebuild content access permissions if necessary
  if (node_access_needs_rebuild()) {
    node_access_rebuild(true);
    node_access_needs_rebuild(false);
  }

  // Update the menu router information
  menu_rebuild();

  return $output;
}
